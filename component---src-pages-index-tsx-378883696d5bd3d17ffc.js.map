{"version":3,"file":"component---src-pages-index-tsx-378883696d5bd3d17ffc.js","mappings":"wJAsFA,UA5DqB,SAAC,GAAwB,IACxCA,EADwC,EAAtBC,KACLC,OAAOC,MAExB,GAA0BC,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KAKA,MAJc,KAAVD,IACFL,EAAQA,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKC,QAAQC,cAAcC,SAASN,EAAMK,mBAIzE,gCACE,gBAAC,IAAD,KACE,gBAAC,KAAD,CACEE,YAAY,uCACZC,UAAU,OACVC,SAAU,SAACC,GACTT,EAASS,EAAMC,OAAOC,UAGzBjB,EAAMkB,KAAI,SAACV,GAAD,OACT,2BAASW,IAAKX,EAAKY,IACjB,gBAAC,KAAD,CAAKD,IAAKX,EAAKa,KAAMR,UAAU,QAC7B,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAWS,IAAI,MAAMd,EAAKe,YAAYC,OACtC,gBAAC,KAAD,CAAcF,IAAI,KAAKT,UAAU,mBAC9BL,EAAKe,YAAYE,SAEpB,uBAAKZ,UAAU,8BACZL,EAAKe,YAAYG,KACfC,QAAQ,MAAO,IACfC,MAAM,KACNV,KAAI,SAACI,GACJ,OAGE,gBAAC,WAAD,CAAgBH,IAAKG,GACnB,gBAAC,KAAD,CAAOT,UAAU,iBAAiBgB,MAAI,GACnCP,GACM,SAKnB,uBAAKT,UAAU,4BACb,gBAAC,KAAD,CAAMA,UAAU,wCAAwCiB,GAAE,IAAMtB,EAAKuB,MAArE","sources":["webpack://website/./src/pages/index.tsx"],"sourcesContent":["import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Badge, Card, CardBody, CardSubtitle, CardTitle, Col, Input, Row } from 'reactstrap';\n\nimport PageLayout from '../components/page-layout/PageLayout';\n\ntype DataProps = {\n  data: {\n    allMdx: {\n      nodes: Array<{\n        frontmatter: {\n          date: string;\n          title: string;\n          summary: string;\n          tags: string;\n        };\n        id: string;\n        slug: string;\n        name: string;\n        rawBody: string;\n      }>;\n    };\n  };\n};\n\nconst BlogPostList = ({ data }: DataProps) => {\n  let posts = data.allMdx.nodes;\n\n  const [query, setQuery] = useState('');\n  if (query !== '') {\n    posts = posts.filter((post) => post.rawBody.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return (\n    <>\n      <PageLayout>\n        <Input\n          placeholder='Search or filter posts based on tags'\n          className='mt-4'\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setQuery(event.target.value);\n          }}\n        ></Input>\n        {posts.map((post) => (\n          <article key={post.id}>\n            <Row key={post.name} className='my-4'>\n              <Col>\n                <Card>\n                  <CardBody>\n                    <CardTitle tag='h5'>{post.frontmatter.title}</CardTitle>\n                    <CardSubtitle tag='h6' className='mb-2 text-muted'>\n                      {post.frontmatter.summary}\n                    </CardSubtitle>\n                    <div className='d-inline-block float-start'>\n                      {post.frontmatter.tags\n                        .replace(/\\s/g, '')\n                        .split(',')\n                        .map((tag) => {\n                          return (\n                            // Return a componet consisting of Badge and a whitespace to visual show\n                            // separation between badge elements\n                            <React.Fragment key={tag}>\n                              <Badge className='d-inline-block' pill>\n                                {tag}\n                              </Badge>{' '}\n                            </React.Fragment>\n                          );\n                        })}\n                    </div>\n                    <div className='d-inline-block float-end'>\n                      <Link className='card-link btn btn-secondary rounded-0' to={`/${post.slug}`}>\n                        Read more\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </article>\n        ))}\n      </PageLayout>\n    </>\n  );\n};\n\nexport default BlogPostList;\n\nexport const query = graphql`\n  {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }, filter: { frontmatter: { draft: { eq: false } } }) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          summary\n          tags\n        }\n        id\n        slug\n        rawBody\n      }\n    }\n  }\n`;\n"],"names":["posts","data","allMdx","nodes","useState","query","setQuery","filter","post","rawBody","toLowerCase","includes","placeholder","className","onChange","event","target","value","map","key","id","name","tag","frontmatter","title","summary","tags","replace","split","pill","to","slug"],"sourceRoot":""}